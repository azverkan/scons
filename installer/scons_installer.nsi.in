##########################################################################
# Global constants and definitions
##########################################################################
!define MULTIUSER_EXECUTIONLEVEL Highest
!define MULTIUSER_MUI
!define MULTIUSER_INSTALLMODE_COMMANDLINE
!define MULTIUSER_INSTALLMODE_INSTDIR "SCons"
!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY "@INSTALL_DIR_REG_KEY@"
!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUENAME "InstallLocation"
!define MULTIUSER_INSTALLMODE_FUNCTION "SetRegHive"
!define MULTIUSER_INSTALLMODE_UNFUNCTION "un.SetRegHive"

!define MUI_ABORTWARNING

!define MUI_LANGDLL_REGISTRY_ROOT "HKCU" 
!define MUI_LANGDLL_REGISTRY_KEY "@INSTALL_DIR_REG_KEY@" 
!define MUI_LANGDLL_REGISTRY_VALUENAME "InstallerLanguage"

SetCompressor lzma

##########################################################################
# Additional headers
##########################################################################
!include MultiUser.nsh
!include MUI2.nsh
!include ..\..\installer\EnvVarUpdate.nsh

##########################################################################
# Installer pages
##########################################################################
Name "@INSTALLER_NAME@"

OutFile "@INSTALLER_FILE@"

Var StartMenuFolder

!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE @LICENSE_DATA@
!insertmacro MULTIUSER_PAGE_INSTALLMODE
!insertmacro MUI_PAGE_COMPONENTS
!insertmacro MUI_PAGE_DIRECTORY
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "SCons"
!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKCU
!define MUI_STARTMENUPAGE_REGISTRY_KEY "@INSTALL_DIR_REG_KEY@"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "StartMenuFolder"
!insertmacro MUI_PAGE_STARTMENU "Application" $StartMenuFolder
!insertmacro MUI_PAGE_INSTFILES
!define MUI_FINISHPAGE_LINK "SCons Website"
!define MUI_FINISHPAGE_LINK_LOCATION "http://www.scons.org"
!insertmacro MUI_PAGE_FINISH

##########################################################################
# Uninstaller pages
##########################################################################
!insertmacro MUI_UNPAGE_WELCOME
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH

##########################################################################
# L10n support
##########################################################################
!insertmacro MUI_LANGUAGE "English"

!insertmacro MUI_RESERVEFILE_LANGDLL

##########################################################################
# Helper functions and macros
##########################################################################
Var RegHive

Function SetRegHive

  ${if} $MultiUser.InstallMode == "AllUsers"
    StrCpy $RegHive "HKLM"
  ${else}
    StrCpy $RegHive "HKCU"
  ${endif}

FunctionEnd

Function un.SetRegHive

  ${if} $MultiUser.InstallMode == "AllUsers"
    StrCpy $RegHive "HKLM"
  ${else}
    StrCpy $RegHive "HKCU"
  ${endif}

FunctionEnd

!macro MultiUserWriteRegStr subkey entry_name new_entry_string
  ${if} $MultiUser.InstallMode == "AllUsers"
    WriteRegStr HKLM "${subkey}" "${entry_name}" "${new_entry_string}"
  ${else}
    WriteRegStr HKCU "${subkey}" "${entry_name}" "${new_entry_string}"
  ${endif}
!macroend

!macro MultiUserDeleteRegKey subkey
  ${if} $MultiUser.InstallMode == "AllUsers"
    DeleteRegKey HKLM "${subkey}"
  ${else}
    DeleteRegKey HKCU "${subkey}"
  ${endif}
!macroend

##########################################################################
# Installation types
##########################################################################
InstType "Full"

##########################################################################
# Installer sections
##########################################################################
Section "SCons Executable" SconsExe

  SectionIn 1

  SetOutPath $INSTDIR

@SCONS_STANDALONE_FILES_INSTALL@

  WriteUninstaller $INSTDIR\@UNINSTALLER_FILE@
  
  !insertmacro MultiUserWriteRegStr ${MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY} ${MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUENAME} $INSTDIR
  
  !insertmacro MUI_STARTMENU_WRITE_BEGIN "Application"
  CreateDirectory "$SMPROGRAMS\$StartMenuFolder"
  CreateShortCut "$SMPROGRAMS\$StartMenuFolder\Uninstall.lnk" $INSTDIR\@UNINSTALLER_FILE@
  !insertmacro MUI_STARTMENU_WRITE_END

# For details, see http://nsis.sourceforge.net/Add_uninstall_information_to_Add/Remove_Programs  
  !insertmacro MultiUserWriteRegStr "Software\Microsoft\Windows\CurrentVersion\Uninstall\@PRODUCT_NAME@" "DisplayName" "@UNINSTALL_DISPLAY_NAME@"
  !insertmacro MultiUserWriteRegStr "Software\Microsoft\Windows\CurrentVersion\Uninstall\@PRODUCT_NAME@" "UninstallString" "$\"$INSTDIR\@UNINSTALLER_FILE@$\""
  !insertmacro MultiUserWriteRegStr "Software\Microsoft\Windows\CurrentVersion\Uninstall\@PRODUCT_NAME@" "QuietUninstallString" "$\"$INSTDIR\@UNINSTALLER_FILE@$\" /S"

SectionEnd

Section "Add to $$PATH" AddToPath

  SectionIn 1

  ${EnvVarUpdate} $0 "PATH" "A" $RegHive $INSTDIR

SectionEnd

##########################################################################
# Installer l10n
##########################################################################
LangString DESC_SconsExe  ${LANG_ENGLISH} "The stand-alone SCons executable."
LangString DESC_AddToPath ${LANG_ENGLISH} "Add the installation directory to the path."

!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${SconsExe}  $(DESC_SconsExe)
  !insertmacro MUI_DESCRIPTION_TEXT ${AddToPath} $(DESC_AddToPath)
!insertmacro MUI_FUNCTION_DESCRIPTION_END

##########################################################################
# Installer functions
##########################################################################
Function .onInit

  !insertmacro MUI_LANGDLL_DISPLAY
  !insertmacro MULTIUSER_INIT

# Taken from: http://nsis.sourceforge.net/Allow_only_one_installer_instance
  BringToFront
  ; Check if already running
  ; If so don't open another but bring to front
  System::Call "kernel32::CreateMutexA(i 0, i 0, t '$(^Name)') i .r0 ?e"
  Pop $0
  StrCmp $0 0 launch
   StrLen $0 "$(^Name)"
   IntOp $0 $0 + 1
  loop:
    FindWindow $1 '#32770' '' 0 $1
    IntCmp $1 0 +5
    System::Call "user32::GetWindowText(i r1, t .r2, i r0) i."
    StrCmp $2 "$(^Name)" 0 loop
    System::Call "user32::ShowWindow(i r1,i 9) i."         ; If minimized then maximize
    System::Call "user32::SetForegroundWindow(i r1) i."    ; Bring to front
    Abort
  launch:
# End taken from: http://nsis.sourceforge.net/Allow_only_one_installer_instance

FunctionEnd

Function .onSelChange
  SectionGetFlags ${SconsExe} $0
  IntOp $0 $0 & ${SF_SELECTED}
  ${if} $0 == 0
    SectionGetFlags ${AddToPath} $0
    IntOp $0 $0 ~
    IntOp $0 $0 | ${SF_SELECTED}
    IntOp $0 $0 ~
    IntOp $0 $0 | ${SF_RO}
    SectionSetFlags ${AddToPath} $0
  ${else}
    SectionGetFlags ${AddToPath} $0
    IntOp $0 $0 ~
    IntOp $0 $0 | ${SF_RO}
    IntOp $0 $0 ~
    SectionSetFlags ${AddToPath} $0
  ${endif}
FunctionEnd

##########################################################################
# Uninstaller sections
##########################################################################
Section "Uninstall"

  Delete $INSTDIR\@UNINSTALLER_FILE@

@SCONS_STANDALONE_FILES_UNINSTALL@

  RMDir $INSTDIR
  
  !insertmacro MUI_STARTMENU_GETFOLDER "Application" $StartMenuFolder
  
  Delete "$SMPROGRAMS\$StartMenuFolder\Uninstall.lnk"
  
  RMDir "$SMPROGRAMS\$StartMenuFolder"
  
  !insertmacro MultiUserDeleteRegKey "Software\Microsoft\Windows\CurrentVersion\Uninstall\@PRODUCT_NAME@"

SectionEnd

Section "un.RemoveFromPath"

  ${un.EnvVarUpdate} $0 "PATH" "R" $RegHive $INSTDIR

SectionEnd

##########################################################################
# Uninstaller functions
##########################################################################
Function un.onInit

  !insertmacro MUI_UNGETLANGUAGE
  !insertmacro MULTIUSER_UNINIT
  
FunctionEnd
